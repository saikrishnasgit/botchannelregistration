{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "botEnv": {
      "type": "string",
      "defaultValue": "prod"
    },
    "botId": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "centralus"
    },
    "sku": {
      "type": "string",
      "defaultValue": "S1"
    },
    "kind": {
      "type": "string",
      "defaultValue": "bot"
    },
    "siteName": {
      "type": "string",
      "defaultValue": "nosite"
    },
    "createNewStorage": {
      "type": "bool",
      "defaultValue": false
    },
    "storageAccountName": {
      "type": "string"
    },
    "storageAccountResourceId": {
      "type": "string",
      "defaultValue": ""
    },
    "appId": {
      "type": "string"
    },
    "appSecret": {
      "type": "string"
    },
    "azureWebJobsBotFrameworkDirectLineSecret": {
      "type": "string",
      "defaultValue": ""
    },
    "zipUrl": {
      "type": "string",
      "defaultValue": ""
    },
    "proactiveZipUrl": {
      "type": "string",
      "defaultValue": ""
    },
    "useAppInsights": {
      "type": "bool",
      "defaultValue": false
    },
    "appInsightsLocation": {
      "type": "string",
      "defaultValue": "East US"
    },
    "appServicePlanName": {
      "type": "string",
      "metadata": 
      {
        "description": "The name of the App Service plan to use for hosting the web app."
      }
    },
    //"serverFarmId": {
    //  "type": "string",
    //  "defaultValue": "resourceId('Microsoft.Web/serverfarms',parameters('appplanname'))"

    //},
    "createServerFarm": {
      "type": "bool",
      "defaultValue": false
    },
    "serverFarmLocation": {
      "type": "string",
      "defaultValue": "South Central US"
    },
    "serverFarmSku": {
      "type": "object",
      "defaultValue": {
        "name": "S1",
        "tier": "Standard",
        "size": "S1",
        "family": "S",
        "capacity": 1
      }
    },
    "endpoint": {
      "type": "string",
      "defaultValue": ""
    },
    "luisApiLocation": {
      "type": "string",
      "defaultValue": "Global"
    }
  },
    "variables": {
        "storageAccountType": "Standard_LRS",
        "storageAccountId": "[if(or(parameters('createNewStorage'), equals('', parameters('storageAccountResourceId'))), resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), parameters('storageAccountResourceId'))]",
        "serverFarmName": "[last(split(parameters('serverFarmId'), '/'))]",
        "myWorkerSize": 0,
        "proactiveFunctionName": "[concat(parameters('siteName'), '-function')]",
        "insightsName": "[concat(parameters('botId'), substring(uniqueString(resourceGroup().id), 0, 6))]",
        "config": {
            "scratch": {
                "stateEndpoint": "https://intercom-api-scratch.azurewebsites.net",
                "azureWebJobsBotFrameworkDirectLineEndpoint": "https://directline.scratch.botframework.com/",
                "blobStoreName": "icscratch",
                "openIdMetadata": "https://intercom-api-ppe.azurewebsites.net/v1/.well-known/openidconfiguration"
            },
            "ppe": {
                "stateEndpoint": "https://intercom-api-ppe.azurewebsites.net",
                "azureWebJobsBotFrameworkDirectLineEndpoint": "https://directline.ppe.botframework.com/",
                "blobStoreName": "intercomppe",
                "openIdMetadata": "https://intercom-api-ppe.azurewebsites.net/v1/.well-known/openidconfiguration"
            },
            "prod": {
                "stateEndpoint": "",
                "azureWebJobsBotFrameworkDirectLineEndpoint": "https://directline.botframework.com/",
                "blobStoreName": "connectorprod",
                "openIdMetadata": ""
            }
        },
        "botAppKinds": {
            "function": "functionapp",
            "sdk": "app",
            "designer": "app",
            "bot": ""
        },
        "botAppKind": "[variables('botAppKinds')[parameters('kind')]]",
        "currentConfig": "[variables('config')[toLower(parameters('botEnv'))]]",
        "siteHost": "[concat(parameters('siteName'), '.azurewebsites.net')]",
        "botEndpointConfig": {
            "bot": "[parameters('endpoint')]",
            "sdk": "[concat('https://', variables('siteHost'), '/api/messages')]",
            "designer": "[concat('https://', variables('siteHost'), '/api/messages')]",
            "function": "[concat('https://', variables('siteHost'), '/api/messages?code=', 'NYI')]"
        },
        "botEndpoint": "[variables('botEndpointConfig')[parameters('kind')]]",
        "luisApiName": "",
        "luisApiResId": "[resourceId('Microsoft.CognitiveServices/accounts/', variables('luisApiName'))]"
    },
  "resources": [
    {
      "apiVersion": "2015-08-01",
      "name": "[parameters('siteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[parameters('siteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms',parameters('appServicePlanName'))]"       
      },
      "dependsOn": [
        "[concat('Microsoft.Web/serverFarms/',parameters('appServicePlanName'))]"
      ]
    },
      {
        "name": "[variables('insightsName')]",
        "type": "microsoft.insights/components",
        "kind": "web",
        "apiVersion": "2014-04-01",
        "condition": "[parameters('useAppInsights')]",
        "location": "[parameters('appInsightsLocation')]",
        "tags": {
          "[concat('hidden-link:', resourceId('Microsoft.BotService/botServices/', parameters('botId')))]": "Resource"
        },
        "properties": {
          "ApplicationId": "[parameters('botId')]"
        }
      },
      {
        "apiVersion": "2017-12-01",
        "type": "Microsoft.BotService/botServices",
        "name": "[parameters('botId')]",
        "location": "global",
        "kind": "[parameters('kind')]",
        "sku": {
          "name": "[parameters('sku')]"
        },
        "properties": {
          "name": "[parameters('botId')]",
          "displayName": "[parameters('botId')]",
          "endpoint": "[variables('botEndpoint')]",
          "msaAppId": "[parameters('appId')]"
        },
        "dependsOn": []
      }
      ]
    }
